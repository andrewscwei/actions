name: Deploy
description: Deploys to GitHub Pages with the option to create a new GitHub release
inputs:
  artifact-name:
    default: build-artifact
    description: Name of the artifact to download
  artifact-path:
    description: Path (relative to working directory) to download artifact to
    required: false
  branch-name:
    default: gh-pages
    description: Branch for GitHub Pages
  cname:
    description: Custom subdomain for GitHub Pages
    required: false
  deploy-path:
    description: Path to deploy to GitHub Pages
    default: .gh-pages
  github-token:
    default: ${{ github.token }}
    description: Custom GitHub token to use
    required: false
  postdeploy-command:
    description: Command to run after deploying
    required: false
  predeploy-command:
    description: Command to run before deploying
    required: false
runs:
  using: composite
  steps:
    - name: Download artifact
      if: ${{ inputs.artifact-path }}
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.artifact-path }}
    - name: Predeploy
      if: ${{ inputs.predeploy-command }}
      shell: bash
      run: ${{ inputs.predeploy-command }}
    - name: Create CNAME file
      if: ${{ inputs.cname }}
      shell: bash
      run: |-
        echo "${{ inputs.cname }}" > ${{ inputs.deploy-path }}/CNAME
    - name: Deploy to GitHub Pages
      shell: bash
      env:
        BRANCH_NAME: ${{ inputs.branch-name }}
        DEPLOY_PATH: ${{ inputs.deploy-path }}
      run: |-
        ORIGIN_URL="https://${GITHUB_ACTOR}:${{ inputs.github-token }}@github.com/${GITHUB_REPOSITORY}.git"

        # Checkout new branch
        if [[ `git branch | grep $BRANCH_NAME` ]]; then git branch -D $BRANCH_NAME; fi
        git checkout -b $BRANCH_NAME

        # Move target files to root, then delete everything else
        find . -maxdepth 1 ! -name '.' ! -name '..' ! -path "./${DEPLOY_PATH}" ! -path "./$(dirname ${DEPLOY_PATH})" ! -name '.git' ! -name '.gitignore' -exec rm -rf {} \;
        mv ${DEPLOY_PATH}/* .
        rm -R ${DEPLOY_PATH}/

        # Push to branch
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git add -fA
        git commit --allow-empty -m "$(git log -1 --pretty=%B) [skip ci]"
        git push -f $ORIGIN_URL $BRANCH_NAME

        if [ $? -ne 0 ]; then
          exit 1
        else
          echo "Successfully published to GitHub pages" >> $GITHUB_STEP_SUMMARY
        fi
    - name: Postdeploy
      if: ${{ inputs.postdeploy-command }}
      shell: bash
      run: ${{ inputs.postdeploy-command }}
