name: Release
description: Publishes a GitHub release
inputs:
  draft:
    default: "false"
    description: Specifies if the release should be a draft
  prerelease:
    default: "false"
    description: Specifies if the release should be a prerelease
  version:
    description: Release version
runs:
  using: composite
  steps:
    - name: Publish release
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          const tag = '${{ inputs.version }}'.split('/').slice(-1)[0]

          try {
            await github.rest.repos.createRelease({
              draft: ${{ inputs.draft }},
              generate_release_notes: true,
              name: tag,
              owner: context.repo.owner,
              prerelease: ${{ inputs.prerelease }},
              repo: context.repo.repo,
              tag_name: tag,
            })
          }
          catch (error) {
            core.setFailed(error.message)
          }
