on:
  workflow_call:
    inputs:
      artifacts-name:
        default: build-artifacts
        description: Name of the artifacts to download
        type: string
      artifacts-path:
        description: Path (relative to working directory) to download artifacts to
        required: false
        type: string
      branch-name:
        default: gh-pages
        description: Branch for GitHub Pages
        type: string
      deploy-path:
        description: Path to deploy to GitHub Pages
        default: .gh-pages
        type: string
      run-command:
        description: Command to run before deploying
        required: false
        type: string
    secrets:
      gh-access-token:
        description: GitHub access token for checking out private repos
        required: false
jobs:
  deploy:
    name: GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.gh-access-token && secrets.gh-access-token || github.token }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-cache-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Node modules
        run: npm install
      - name: Download artifacts
        if: ${{ inputs.artifacts-name }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifacts-name }}
          path: ${{ inputs.artifacts-path }}
      - name: Run
        if : ${{ inputs.run-command }}
        run: ${{ inputs.run-command }}
      - name: Deploy to GitHub Pages
        env:
          BRANCH_NAME: ${{ inputs.branch-name }}
          DEPLOY_PATH: ${{ inputs.deploy-path }}
        run: |-
          DEPLOY_PATH="${{ inputs.deploy-path }}"
          ORIGIN_URL="https://${GITHUB_ACTOR}:${{ github.token }}@github.com/${GITHUB_REPOSITORY}.git"

          # Checkout new branch.
          if [ `git branch | grep $BRANCH_NAME` ]; then git branch -D $BRANCH_NAME; fi
          git checkout -b $BRANCH_NAME

          # Build and move generated files to root, then delete everything else.
          npm run pages
          find . -maxdepth 1 ! -name '.' ! -name '..' ! -name ${DEPLOY_PATH} ! -name '.git' ! -name '.gitignore' -exec rm -rf {} \;
          mv ${DEPLOY_PATH}/* .
          rm -R ${DEPLOY_PATH}/

          # Push to branch.
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR"@users.noreply.github.com"
          git add -fA
          git commit --allow-empty -m "[SKIP CI] $(git log -1 --pretty=%B)"
          git push -f $ORIGIN_URL $BRANCH_NAME

          if [ $? -ne 0 ]; then
            exit 1
          else
            echo "Successfully published docs to GitHub Pages"
          fi
